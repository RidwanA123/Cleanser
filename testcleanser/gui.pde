/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window2:307537:
  appc.background(230);
} //_CODE_:window2:307537:

public void pauseButtonPressed(GButton source, GEvent event) { //_CODE_:pauseButton:933206:

  if (buttonPressed == false){
    
    noLoop();
    buttonPressed = true;
    pauseButton.setText("Resume");
  }

  else{
   
    loop();
    buttonPressed = false;
    pauseButton.setText("Pause");
    
  }
} //_CODE_:pauseButton:933206:

public void ResetButtonPressed(GButton source, GEvent event) { //_CODE_:Reset:608023:
  
  //restart();

} //_CODE_:Reset:608023:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:Oceans:845265:
  println("Oceans - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:Oceans:845265:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:Pullution:515733:
  println("Pullution - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:Pullution:515733:

public void Amount_They_pick(GSlider source, GEvent event) { //_CODE_:CleanserStorage:536613:
  println("CleanserStorage - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:CleanserStorage:536613:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window2 = GWindow.getWindow(this, "Window title", 0, 0, 480, 320, JAVA2D);
  window2.noLoop();
  window2.setActionOnClose(G4P.KEEP_OPEN);
  window2.addDrawHandler(this, "win_draw1");
  pauseButton = new GButton(window2, 2, 5, 65, 30);
  pauseButton.setText("Pause");
  pauseButton.addEventHandler(this, "pauseButtonPressed");
<<<<<<< HEAD
  Reset = new GButton(window2, 88, 6, 80, 30);
  Reset.setText("Restart");
  Reset.setLocalColorScheme(GCScheme.RED_SCHEME);
  Reset.addEventHandler(this, "ResetButtonPressed");
  PlasticAmount = new GSlider(window2, 3, 100, 100, 40, 10.0);
  PlasticAmount.setLimits(60, 20, 100);
  PlasticAmount.setNumberFormat(G4P.INTEGER, 0);
  PlasticAmount.setOpaque(false);
  PlasticAmount.addEventHandler(this, "PlasticAmountClick");
  CleanserStorage = new GSlider(window2, 3, 54, 100, 40, 10.0);
  CleanserStorage.setLimits(10.0, 5.0, 20.0);
  CleanserStorage.setNumberFormat(G4P.DECIMAL, 2);
  CleanserStorage.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  CleanserStorage.setOpaque(false);
  CleanserStorage.addEventHandler(this, "Amount_They_pick");
=======
  Reset = new GButton(window2, 72, 5, 65, 30);
  Reset.setText("Restart");
  Reset.setLocalColorScheme(GCScheme.RED_SCHEME);
  Reset.addEventHandler(this, "ResetButtonPressed");
  Oceans = new GDropList(window2, 142, 7, 90, 100, 4, 10);
  Oceans.setItems(loadStrings("list_845265"), 1);
  Oceans.addEventHandler(this, "dropList1_click1");
  Pullution = new GSlider(window2, 19, 65, 100, 40, 10.0);
  Pullution.setLimits(0.5, 0.0, 1.0);
  Pullution.setNumberFormat(G4P.DECIMAL, 2);
  Pullution.setOpaque(false);
  Pullution.addEventHandler(this, "slider1_change1");
>>>>>>> 2d829b46d08b68db9e2e3345e5710eae4205df6b
  window2.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window2;
GButton pauseButton; 
GButton Reset; 
<<<<<<< HEAD
GSlider PlasticAmount; 
GSlider CleanserStorage; 
=======
GDropList Oceans; 
GSlider Pullution; 
>>>>>>> 2d829b46d08b68db9e2e3345e5710eae4205df6b
